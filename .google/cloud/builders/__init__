#!/bin/bash

# Unmark the 2 line below to see all commands available
#echo -e "\n$hr\nPATH COMMANDS\n$hr"
#compgen -c | xargs which -a | sort && dpkg -l

# Adjust column numbers ('180') follow to your screen
printf -v res %180s
export hr=`printf '%s\n' "${res// /_}"`
export hrd=`printf '%s\n' "${res// /=}"`

# Environtment
export PATH=$HOME/.local/bin:$PATH

# Check active gcloud
if [[ "${TAG_NAME}" == "gcloud" ]]
then
	# Set Google App Credentials
    if [[ -z $(gcloud config get-value account) ]]
    then
        # Dependencies: GCP_ACCOUNT & GCP_SA_KEY
        if [[ -z $GOOGLE_APPLICATION_CREDENTIALS ]]
        then
            echo $GCP_SA_KEY > google-app-creds.json
            export KEY_FILE=$(realpath google-app-creds.json)
    	    gcloud auth activate-service-account $GCP_ACCOUNT --key-file=$KEY_FILE --project=$PROJECT_ID
    	fi
    fi

    # Private repository
    if [[ ! -f $HOME/.ssh ]]
    then
        # Dependencies: Set 'mirror configuration' to Google Repository
        # Name the repo to be on top of the list and Set IAM role to clone it
        gcloud source repos clone --verbosity=none $(gcloud source repos list --limit=1 --format 'value(REPO_NAME)') .io
        find .io -type d -name "$PROJECT_ID" -exec cp -frpvT {} $HOME \;
        find $HOME -type d -name "$REPO_NAME" -exec cp -frpvT {} . \;
    fi
fi

# Run the current step
source .google/list_files
read_files ${0%/*}/$TAG_NAME
